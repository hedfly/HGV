#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
     100                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
     200                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(168,72)
simplifiedRoom.nPorts
simplifiedRoom.rooLen
simplifiedRoom.rooWid
simplifiedRoom.rooHei
simplifiedRoom.QRoo_flow
simplifiedRoom.m_flow_nominal
simplifiedRoom.rooVol.energyDynamics
simplifiedRoom.rooVol.massDynamics
simplifiedRoom.rooVol.substanceDynamics
simplifiedRoom.rooVol.traceDynamics
simplifiedRoom.rooVol.p_start
simplifiedRoom.rooVol.T_start
simplifiedRoom.rooVol.X_start[1]
simplifiedRoom.rooVol.X_start[2]
simplifiedRoom.rooVol.mSenFac
simplifiedRoom.rooVol.initialize_p
simplifiedRoom.rooVol.m_flow_nominal
simplifiedRoom.rooVol.nPorts
simplifiedRoom.rooVol.m_flow_small
simplifiedRoom.rooVol.allowFlowReversal
simplifiedRoom.rooVol.V
simplifiedRoom.rooVol.prescribedHeatFlowRate
simplifiedRoom.rooVol.ports[1].m_flow
simplifiedRoom.rooVol.ports[2].m_flow
simplifiedRoom.rooVol.heatPort.T
simplifiedRoom.rooVol.heatPort.Q_flow
simplifiedRoom.rooVol.rho_start
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
simplifiedRoom.rooVol.state_default.p
simplifiedRoom.rooVol.state_default.T
simplifiedRoom.rooVol.state_default.X[1]
simplifiedRoom.rooVol.state_default.X[2]
simplifiedRoom.rooVol.rho_default
simplifiedRoom.rooVol.state_start.p
simplifiedRoom.rooVol.state_start.T
simplifiedRoom.rooVol.state_start.X[1]
simplifiedRoom.rooVol.state_start.X[2]
simplifiedRoom.rooVol.useSteadyStateTwoPort
simplifiedRoom.rooVol.masExc.k
simplifiedRoom.rooVol.masExc.y
simplifiedRoom.QSou.T_ref
simplifiedRoom.QSou.alpha
simplifiedRoom.QSou.Q_flow
simplifiedRoom.ramp.height
simplifiedRoom.ramp.duration
simplifiedRoom.ramp.offset
simplifiedRoom.ramp.startTime
simplifiedRoom.airPorts[1].m_flow
simplifiedRoom.airPorts[1].h_outflow
simplifiedRoom.airPorts[2].m_flow
sin.nPorts
sin.medium.d
sin.medium.X[2]
sin.medium.u
sin.medium.R
sin.medium.MM
sin.medium.preferredMediumStates
sin.medium.standardOrderComponents
sin.medium.T_degC
sin.medium.p_bar
sin.medium.MMX[1]
sin.medium.MMX[2]
sin.medium.X_air
sin.medium.dT
sin.ports[1].m_flow
sin.ports[1].h_outflow
sin.flowDirection
sin.use_p
sin.p
sin.d
sin.use_T
sin.T
sin.h
sin.X[1]
sin.X[2]
boundary.nPorts
boundary.medium.Xi[1]
boundary.medium.h
boundary.medium.d
boundary.medium.T
boundary.medium.X[1]
boundary.medium.X[2]
boundary.medium.u
boundary.medium.R
boundary.medium.MM
boundary.medium.state.T
boundary.medium.state.X[1]
boundary.medium.state.X[2]
boundary.medium.preferredMediumStates
boundary.medium.standardOrderComponents
boundary.medium.T_degC
boundary.medium.p_bar
boundary.medium.MMX[1]
boundary.medium.MMX[2]
boundary.medium.X_steam
boundary.medium.X_air
boundary.medium.dT
boundary.ports[1].m_flow
boundary.ports[1].p
boundary.ports[1].h_outflow
boundary.ports[1].Xi_outflow[1]
boundary.flowDirection
boundary.use_m_flow_in
boundary.use_T_in
boundary.use_X_in
boundary.use_C_in
boundary.m_flow
boundary.T
boundary.X[1]
boundary.X[2]
boundary.m_flow_in_internal
boundary.T_in_internal
boundary.X_in_internal[1]
boundary.X_in_internal[2]
simplifiedRoom.rooVol.dynBal.energyDynamics
simplifiedRoom.rooVol.dynBal.massDynamics
simplifiedRoom.rooVol.dynBal.substanceDynamics
simplifiedRoom.rooVol.dynBal.traceDynamics
simplifiedRoom.rooVol.dynBal.p_start
simplifiedRoom.rooVol.dynBal.T_start
simplifiedRoom.rooVol.dynBal.X_start[1]
simplifiedRoom.rooVol.dynBal.X_start[2]
simplifiedRoom.rooVol.dynBal.mSenFac
simplifiedRoom.rooVol.dynBal.initialize_p
simplifiedRoom.rooVol.dynBal.nPorts
simplifiedRoom.rooVol.dynBal.ports[1].m_flow
simplifiedRoom.rooVol.dynBal.ports[2].m_flow
simplifiedRoom.rooVol.dynBal.medium.p
simplifiedRoom.rooVol.dynBal.medium.Xi[1]
simplifiedRoom.rooVol.dynBal.medium.der(Xi[1])
simplifiedRoom.rooVol.dynBal.medium.d
simplifiedRoom.rooVol.dynBal.medium.T
simplifiedRoom.rooVol.dynBal.medium.X[2]
simplifiedRoom.rooVol.dynBal.medium.u
simplifiedRoom.rooVol.dynBal.medium.R
simplifiedRoom.rooVol.dynBal.medium.MM
simplifiedRoom.rooVol.dynBal.medium.preferredMediumStates
simplifiedRoom.rooVol.dynBal.medium.standardOrderComponents
simplifiedRoom.rooVol.dynBal.medium.T_degC
simplifiedRoom.rooVol.dynBal.medium.p_bar
simplifiedRoom.rooVol.dynBal.medium.MMX[1]
simplifiedRoom.rooVol.dynBal.medium.MMX[2]
simplifiedRoom.rooVol.dynBal.medium.X_air
simplifiedRoom.rooVol.dynBal.medium.dT
simplifiedRoom.rooVol.dynBal.U
simplifiedRoom.rooVol.dynBal.der(U)
simplifiedRoom.rooVol.dynBal.m
simplifiedRoom.rooVol.dynBal.der(m)
simplifiedRoom.rooVol.dynBal.mXi[1]
simplifiedRoom.rooVol.dynBal.der(mXi[1])
simplifiedRoom.rooVol.dynBal.mb_flow
simplifiedRoom.rooVol.dynBal.Hb_flow
simplifiedRoom.rooVol.dynBal.fluidVolume
simplifiedRoom.rooVol.dynBal.CSen
simplifiedRoom.rooVol.dynBal.mWat_flow
simplifiedRoom.rooVol.dynBal.ports_H_flow[2]
simplifiedRoom.rooVol.dynBal.ports_mXi_flow[2, 1]
simplifiedRoom.rooVol.dynBal.cp_default
simplifiedRoom.rooVol.dynBal.rho_nominal
simplifiedRoom.rooVol.dynBal.computeCSen
simplifiedRoom.rooVol.dynBal.state_default.p
simplifiedRoom.rooVol.dynBal.state_default.T
simplifiedRoom.rooVol.dynBal.state_default.X[1]
simplifiedRoom.rooVol.dynBal.state_default.X[2]
simplifiedRoom.rooVol.dynBal.rho_default
simplifiedRoom.rooVol.dynBal.s[1]
simplifiedRoom.rooVol.dynBal.hStart

double initialValue(168,6)
 -2       2                       0                       0                
  6   258   # simplifiedRoom.nPorts
 -2       4                       0                       0                
  6   256   # simplifiedRoom.rooLen
 -2       3                       0                       0                
  6   256   # simplifiedRoom.rooWid
 -2       2                       0                 1.0000000000000000E+100
  6   256   # simplifiedRoom.rooHei
 -1 1.0000000000000000E+006       0                       0                
  1   280   # simplifiedRoom.QRoo_flow
 -1       1                       0                       0                
  1   280   # simplifiedRoom.m_flow_nominal
 -2       2                       1                       4                
  6   258   # simplifiedRoom.rooVol.energyDynamics
 -2       2                       1                       4                
  6   258   # simplifiedRoom.rooVol.massDynamics
 -2       2                       1                       4                
  6   258   # simplifiedRoom.rooVol.substanceDynamics
 -2       2                       1                       4                
  6   258   # simplifiedRoom.rooVol.traceDynamics
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   256   # simplifiedRoom.rooVol.p_start
 -2 2.9314999999999998E+002       1                   10000                
  6   256   # simplifiedRoom.rooVol.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # simplifiedRoom.rooVol.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # simplifiedRoom.rooVol.X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6   256   # simplifiedRoom.rooVol.mSenFac
 -2       1                       0                       0                
  6   769   # simplifiedRoom.rooVol.initialize_p
 -2       1                       0                 1.0000000000000000E+100
  6   256   # simplifiedRoom.rooVol.m_flow_nominal
 -2       2                       0                       0                
  6   258   # simplifiedRoom.rooVol.nPorts
 -2 1.0000000000000000E-004       0                 1.0000000000000000E+100
  6   256   # simplifiedRoom.rooVol.m_flow_small
 -2       1                       0                       0                
  6   257   # simplifiedRoom.rooVol.allowFlowReversal
 -2      24                       0                       0                
  6   256   # simplifiedRoom.rooVol.V
 -2       0                       0                       0                
  6   257   # simplifiedRoom.rooVol.prescribedHeatFlowRate
 -2      -1                 -100000                  100000                
  6   388   # simplifiedRoom.rooVol.ports[1].m_flow
 -2       1                 -100000                  100000                
  6   388   # simplifiedRoom.rooVol.ports[2].m_flow
 -2 2.9512456034678314E+002       0                 1.0000000000000000E+100
  6   260   # simplifiedRoom.rooVol.heatPort.T
 -2 2.7777777777777778E+003       0                       0                
  6   388   # simplifiedRoom.rooVol.heatPort.Q_flow
 -2 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.rho_start
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.state_default.p
 -2 2.9314999999999998E+002       1                   10000                
  6  1280   # simplifiedRoom.rooVol.state_default.T
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # simplifiedRoom.rooVol.state_default.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.state_default.X[2]
 -2 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.rho_default
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.state_start.p
 -2 2.9314999999999998E+002       1                   10000                
  6  1280   # simplifiedRoom.rooVol.state_start.T
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # simplifiedRoom.rooVol.state_start.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.state_start.X[2]
 -2       0                       0                       0                
  6  1281   # simplifiedRoom.rooVol.useSteadyStateTwoPort
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.masExc.k
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.masExc.y
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # simplifiedRoom.QSou.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedRoom.QSou.alpha
 -2 2.7777777777777778E+003       0                       0                
  6   256   # simplifiedRoom.QSou.Q_flow
 -2 1.0000000000000000E+006       0                       0                
  6   256   # simplifiedRoom.ramp.height
 -1   36000                       0                 1.0000000000000000E+100
  1   280   # simplifiedRoom.ramp.duration
 -1       0                       0                       0                
  1   280   # simplifiedRoom.ramp.offset
 -1       0                       0                       0                
  1   280   # simplifiedRoom.ramp.startTime
 -2      -1                 -100000                  100000                
  6   388   # simplifiedRoom.airPorts[1].m_flow
 -2 4.7304215454225385E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6   260   # simplifiedRoom.airPorts[1].h_outflow
 -2       1                 -100000                  100000                
  6   388   # simplifiedRoom.airPorts[2].m_flow
 -2       1                       0                       0                
  6   258   # sin.nPorts
 -2 1.2000000000000000E+000       0                  100000                
  6   256   # sin.medium.d
 -2 9.8999999999999999E-001       0                       1                
  6   256   # sin.medium.X[2]
 -2 -3.9136555000000000E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # sin.medium.u
 -2 2.8879594599429981E+002       0                 1.0000000000000000E+007
  6   256   # sin.medium.R
 -2 2.8790127130676930E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # sin.medium.MM
 -2       0                       0                       0                
  6   257   # sin.medium.preferredMediumStates
 -2       1                       0                       0                
  6   257   # sin.medium.standardOrderComponents
 -2      20                       0                       0                
  6   256   # sin.medium.T_degC
 -2 1.0132500000000000E+000       0                       0                
  6   256   # sin.medium.p_bar
 -2 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # sin.medium.MMX[1]
 -2 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # sin.medium.MMX[2]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # sin.medium.X_air
 -2      20                       0                       0                
  6  1280   # sin.medium.dT
 -2       1                 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # sin.ports[1].m_flow
 -2 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # sin.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sin.flowDirection
 -2       1                       0                       0                
  6   257   # sin.use_p
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # sin.p
 -1 1.2000000000000000E+000       0                  100000                
  1   280   # sin.d
 -2       1                       0                       0                
  6   257   # sin.use_T
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # sin.T
 -1 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  1   280   # sin.h
 -1 1.0000000000000000E-002       0                       1                
  1   280   # sin.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # sin.X[2]
 -2       1                       0                       0                
  6   258   # boundary.nPorts
 -2 1.0000000000000000E-002       0                       1                
  6   256   # boundary.medium.Xi[1]
 -2 4.5300945000000000E+004       0                       0                
  6   256   # boundary.medium.h
 -2 1.2000000000000000E+000       0                  100000                
  6   256   # boundary.medium.d
 -2 2.9314999999999998E+002       1                   10000                
  6   256   # boundary.medium.T
 -2 1.0000000000000000E-002       0                       1                
  6   256   # boundary.medium.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6   256   # boundary.medium.X[2]
 -2 -3.9136555000000000E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # boundary.medium.u
 -2 2.8879594599429981E+002       0                 1.0000000000000000E+007
  6   256   # boundary.medium.R
 -2 2.8790127130676937E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # boundary.medium.MM
 -2 2.9314999999999998E+002       1                   10000                
  6   256   # boundary.medium.state.T
 -2 1.0000000000000000E-002       0                       1                
  6   256   # boundary.medium.state.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6   256   # boundary.medium.state.X[2]
 -2       0                       0                       0                
  6   257   # boundary.medium.preferredMediumStates
 -2       1                       0                       0                
  6   257   # boundary.medium.standardOrderComponents
 -2      20                       0                       0                
  6   256   # boundary.medium.T_degC
 -2 1.0132500000000000E+000       0                       0                
  6   256   # boundary.medium.p_bar
 -2 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # boundary.medium.MMX[1]
 -2 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # boundary.medium.MMX[2]
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # boundary.medium.X_steam
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # boundary.medium.X_air
 -2      20                       0                       0                
  6  1280   # boundary.medium.dT
 -2      -1                 -9.9999999999999995E+059 9.9999999999999995E+059
  6   388   # boundary.ports[1].m_flow
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # boundary.ports[1].p
 -2 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # boundary.ports[1].h_outflow
 -2 1.0000000000000000E-002       0                       1                
  6   260   # boundary.ports[1].Xi_outflow[1]
 -2       3                       1                       3                
  6  1282   # boundary.flowDirection
 -2       0                       0                       0                
  6   769   # boundary.use_m_flow_in
 -2       0                       0                       0                
  6   769   # boundary.use_T_in
 -2       0                       0                       0                
  6   769   # boundary.use_X_in
 -2       0                       0                       0                
  6   769   # boundary.use_C_in
 -2       1                 -100000                  100000                
  6   256   # boundary.m_flow
 -2 2.9314999999999998E+002       1                   10000                
  6   256   # boundary.T
 -2 1.0000000000000000E-002       0                       1                
  6   256   # boundary.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6   256   # boundary.X[2]
 -2       1                       0                       0                
  6  1280   # boundary.m_flow_in_internal
 -2 2.9314999999999998E+002       0                       0                
  6  1280   # boundary.T_in_internal
 -2 1.0000000000000000E-002       0                       0                
  6  1280   # boundary.X_in_internal[1]
 -2 9.8999999999999999E-001       0                       0                
  6  1280   # boundary.X_in_internal[2]
 -2       2                       1                       4                
  6  1282   # simplifiedRoom.rooVol.dynBal.energyDynamics
 -2       2                       1                       4                
  6  1282   # simplifiedRoom.rooVol.dynBal.massDynamics
 -2       2                       1                       4                
  6  1282   # simplifiedRoom.rooVol.dynBal.substanceDynamics
 -2       2                       1                       4                
  6  1282   # simplifiedRoom.rooVol.dynBal.traceDynamics
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.dynBal.p_start
 -2 2.9314999999999998E+002       1                   10000                
  6  1280   # simplifiedRoom.rooVol.dynBal.T_start
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.X_start[1]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.X_start[2]
 -2       1                       1                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.mSenFac
 -2       1                       0                       0                
  6   769   # simplifiedRoom.rooVol.dynBal.initialize_p
 -2       2                       0                       0                
  6  1282   # simplifiedRoom.rooVol.dynBal.nPorts
 -2      -1                 -100000                  100000                
  6  1412   # simplifiedRoom.rooVol.dynBal.ports[1].m_flow
 -2       1                 -100000                  100000                
  6  1412   # simplifiedRoom.rooVol.dynBal.ports[2].m_flow
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.p
 -2 1.0000000000000000E-002       0                       1                
  2  1296   # simplifiedRoom.rooVol.dynBal.medium.Xi[1]
 -2       0                       0                       0                
  3  1280   # simplifiedRoom.rooVol.dynBal.medium.der(Xi[1])
 -2 1.2000000000000000E+000       0                  100000                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.d
 -2 2.9512456034678314E+002       1                   10000                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.T
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.X[2]
 -2 -3.7133284545774615E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.u
 -2 2.8879594599429981E+002       0                 1.0000000000000000E+007
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.R
 -2 2.8790127130676930E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.MM
 -2       1                       0                       0                
  6  1281   # simplifiedRoom.rooVol.dynBal.medium.preferredMediumStates
 -2       1                       0                       0                
  6  1281   # simplifiedRoom.rooVol.dynBal.medium.standardOrderComponents
 -2 2.1974560346783164E+001       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.T_degC
 -2 1.0132500000000000E+000       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.p_bar
 -2 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.MMX[1]
 -2 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.MMX[2]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.X_air
 -2 2.1974560346783157E+001       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.medium.dT
 -2 -1.0694385949183088E+006       0                       0                
  2  1296   # simplifiedRoom.rooVol.dynBal.U
 -2 7.7450732355239279E+002       0                       0                
  3  1280   # simplifiedRoom.rooVol.dynBal.der(U)
 -2 2.8799999999999997E+001       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.m
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.der(m)
 -2 2.8799999999999998E-001       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.mXi[1]
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.der(mXi[1])
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.mb_flow
 -2 -2.0032704542253850E+003       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.Hb_flow
 -2      24                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.fluidVolume
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.CSen
 -2       0                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.mWat_flow
 -2 4.5300945000000000E+004 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.dynBal.ports_H_flow[2]
 -2 1.0000000000000000E-002       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.ports_mXi_flow[2, 1]
 -2 1.0145400000000000E+003       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.cp_default
 -2 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.rho_nominal
 -2       0                       0                       0                
  6  1281   # simplifiedRoom.rooVol.dynBal.computeCSen
 -2 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # simplifiedRoom.rooVol.dynBal.state_default.p
 -2 2.9314999999999998E+002       1                   10000                
  6  1280   # simplifiedRoom.rooVol.dynBal.state_default.T
 -2 1.0000000000000000E-002       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.state_default.X[1]
 -2 9.8999999999999999E-001       0                       1                
  6  1280   # simplifiedRoom.rooVol.dynBal.state_default.X[2]
 -2 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # simplifiedRoom.rooVol.dynBal.rho_default
 -2       1                       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.s[1]
 -2 4.5300945000000000E+004       0                       0                
  6  1280   # simplifiedRoom.rooVol.dynBal.hStart


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable.
#           = 0: real.
#           = 1: boolean.
#           = 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(168,153)
Number of parts [:#(type=Integer)]
Length of the room [m]
Width of the room [m]
Height of the room [m]
Heat generation of the room [W]
Nominal mass flow rate [kg/s]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Set to true if the model has a prescribed heat flow at its heatPort [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Constant output value [kg/s]
Connector of Real output signal [kg/s]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Height of ramps [W]
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal [W]
Output = offset for time < startTime [s]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
select p or d [:#(type=Boolean)]
Boundary pressure [Pa|bar]
Boundary density [kg/m3|g/cm3]
select T or h [:#(type=Boolean)]
Boundary temperature [K|degC]
Boundary specific enthalpy [J/kg]
Boundary mass fractions m_i/m [kg/kg]
Boundary mass fractions m_i/m [kg/kg]
Number of ports [:#(type=Integer)]
Structurally independent mass fractions [1]
Specific enthalpy of medium [J/kg]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of steam water [kg/kg]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/s]
Needed to connect to conditional connector [K]
Needed to connect to conditional connector [1]
Needed to connect to conditional connector [1]
Formulation of energy balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of mass balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Formulation of trace substance balance [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume [1]
= true to set up initial equations for pressure [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Absolute pressure of medium [Pa|bar]
Structurally independent mass fractions [1]
der(Structurally independent mass fractions) [s-1]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
Moisture mass flow rate added to the medium [kg/s]
[W]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is [1]
Start value for specific enthalpy [J/kg]

